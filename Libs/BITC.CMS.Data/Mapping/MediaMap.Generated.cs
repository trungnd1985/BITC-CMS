//------------------------------------------------------------------------------
// <autogenerated>
//     This code was generated by a CodeSmith Template.
//
//     DO NOT MODIFY contents of this file. Changes to this
//     file will be lost if the code is regenerated.
// </autogenerated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace BITC.CMS.Data.Mapping
{
    public partial class MediaMap
        : System.Data.Entity.ModelConfiguration.EntityTypeConfiguration<BITC.CMS.Data.Entity.Media>
    {
        public MediaMap()
        {
            // table
            ToTable("Media", "dbo");

            // keys
            HasKey(t => t.MediaID);

            // Properties
            Property(t => t.MediaID)
                .HasColumnName("MediaID")
                .HasDatabaseGeneratedOption(DatabaseGeneratedOption.Identity)
                .IsRequired();
            Property(t => t.MediaType)
                .HasColumnName("MediaType")
                .IsOptional();
            Property(t => t.MIMEType)
                .HasColumnName("MIMEType")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.Caption)
                .HasColumnName("Caption")
                .HasMaxLength(255)
                .IsOptional();
            Property(t => t.AlternativeText)
                .HasColumnName("AlternativeText")
                .HasMaxLength(255)
                .IsOptional();
            Property(t => t.Description)
                .HasColumnName("Description")
                .HasMaxLength(1000)
                .IsOptional();
            Property(t => t.Dimension)
                .HasColumnName("Dimension")
                .HasMaxLength(50)
                .IsOptional();
            Property(t => t.FileSize)
                .HasColumnName("FileSize")
                .IsRequired();
            Property(t => t.FileName)
                .HasColumnName("FileName")
                .HasMaxLength(255)
                .IsRequired();
            Property(t => t.Extension)
                .HasColumnName("Extension")
                .HasMaxLength(10)
                .IsRequired();
            Property(t => t.UploadedDate)
                .HasColumnName("UploadedDate")
                .IsOptional();
            Property(t => t.Author)
                .HasColumnName("Author")
                .HasMaxLength(255)
                .IsOptional();
            Property(t => t.Url)
                .HasColumnName("Url")
                .HasMaxLength(255)
                .IsOptional();

            // Relationships

            InitializeMapping();
        }
    }
}

