@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}
<div class="col-md-12">
    @(Html.Kendo().Grid<BITC.CMS.Data.Entity.NewsCategory>()
                            .Name("grdNewsCategory")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.NewsCategoryName);
                        columns.Bound(p => p.Description);
                        columns.Bound(p => p.CreatedBy);
                        columns.Bound(p => p.CreatedDate).Format("{0:dd/MM/yyyy}");
                        columns.Template(a => a.NewsCategoryID).ClientTemplate("<a class='k-button' href='" + BITC.Web.Library.Utility.GenerateClientTemplateUrl("Edit", "News", "NewsCategoryID", "Admin") + "'><span class='glyphicon glyphicon-pencil'></span></a><a class='k-button k-button-icontext k-grid-delete'><span class='glyphicon glyphicon-remove'></span></a>").Width(155);
                        columns.Command(command => command.Destroy()).Visible(false);

                    })
                    .ToolBar(toolbar => toolbar.Template(@<text><a class="btn btn-default" href="@Url.Action("Create", "NewsCategory")"><span class="glyphicon glyphicon-plus"></span>@CommonResource.AddNew</a></text>))
                                                    .Pageable()
                                                    .Sortable()
                                                    .DataSource(source => source.Ajax()
                                                        .Model(model =>
                                                        {
                                                            model.Id(p => p.NewsCategoryID);
                                                            model.Field(p => p.NewsCategoryID).Editable(false);
                                                        })
                                                        .Sort(sort => sort.Add("SortOrder"))
                                                        .Read(read => read.Action("Read", "NewsCategory"))
                                                        .Destroy(destroy => destroy.Action("Delete", "NewsCategory")))
    )
</div>
