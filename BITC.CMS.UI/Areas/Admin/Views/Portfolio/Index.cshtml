@{
    ViewBag.Title = "Index";
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
}

<div class="col-md-12">
    @(Html.Kendo().Grid<BITC.CMS.Data.Model.Portfolio>()
                    .Name("grdPortfolio")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.PortfolioName).ClientTemplate(BITC.Web.Library.Utility.GenerateClientTemplateHyperLink("PortfolioName", "Edit", "Portfolio", "PortfolioID", "Admin"));
                        columns.Bound(p => p.Description);
                        columns.Bound(p => p.CreatedBy);
                        columns.Bound(p => p.CreatedDate).Format("{0:dd/MM/yyyy}");
                        columns.Template(a => a.PortfolioID).ClientTemplate("<a class='k-button' href='" + BITC.Web.Library.Utility.GenerateClientTemplateUrl("Edit", "Portfolio", "PortfolioID", "Admin") + "'><span class='glyphicon glyphicon-pencil'></span></a><a class='k-button k-button-icontext k-grid-delete'><span class='glyphicon glyphicon-remove'></span></a>").Width(155);

                    })
                    .ToolBar(toolbar => toolbar.Template(@<text><a class="btn btn-default" href="@Url.Action("Create","Portfolio")"><span class="glyphicon glyphicon-plus"></span></a></text>))
                    .Selectable(select => select.Mode(GridSelectionMode.Single).Type(GridSelectionType.Row))
                    .Pageable()
                    .Sortable()
                    .DataSource(source => source.Ajax()
                        .Model(model =>
                        {
                            model.Id(p => p.PortfolioID);
                            model.Field(p => p.PortfolioID).Editable(false);
                        })
                        .Sort(sort => sort.Add("SortOrder"))
                        .Create(create => create.Action("Create", "Portfolio"))
                        .Read(read => read.Action("LoadAllPortfolios", "Portfolio"))
                        .Update(update => update.Action("Update", "Portfolio"))
                        .Destroy(destroy => destroy.Action("Delete", "Portfolio")))
    )
</div>
