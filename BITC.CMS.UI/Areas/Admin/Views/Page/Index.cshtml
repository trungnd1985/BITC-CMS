@{
    Layout = "~/Areas/Admin/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "List of Page";
}

<div class="col-md-12">
    @(Html.Kendo().Grid<BITC.CMS.UI.Areas.Admin.Models.PageIndexModel>()
                    .Name("grdPage")
                    .Columns(columns =>
                    {
                        columns.Bound(p => p.PageTitle);
                        columns.Bound(p => p.Url);
                        columns.Bound(p => p.CreatedBy);
                        columns.Bound(p => p.CreatedDate).Format("{0:dd/MM/yyyy}");
                        columns.Template(a => a.PageID).ClientTemplate("<a class='k-button' href='" + BITC.Web.Library.Utility.GenerateClientTemplateUrl("Edit", "Page", "PageID", "Admin") + "'><span class='glyphicon glyphicon-pencil'></span></a><a class='k-button k-button-icontext k-grid-delete'><span class='glyphicon glyphicon-remove'></span></a>").Width(155);
                        columns.Command(command => command.Destroy()).Visible(false);

                    })
                    .ToolBar(toolbar => toolbar.Template(@<text><a class="btn btn-default" href="@Url.Action("Create","Page")">
                            <span class="glyphicon glyphicon-plus"></span>@CommonResource.AddNew
                        </a></text>))
                                        .Pageable()
                                        .Sortable()
                                        .DataSource(source => source.Ajax()
                                            .Model(model =>
                                            {
                                                model.Id(p => p.PageID);
                                                model.Field(p => p.PageID).Editable(false);
                                            })
                                            .Sort(sort => sort.Add("SortOrder"))
                                            .Create(create => create.Action("Create", "Page"))
                                            .Read(read => read.Action("LoadAllPages", "Page"))
                                            .Update(update => update.Action("Update", "Page"))
                                            .Destroy(destroy => destroy.Action("Delete", "Page")))
    )
</div>